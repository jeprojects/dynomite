var N=null,E="",T="t",U="u",searchIndex={};
var R=["dynomite_derive","dynomite","policy","An auto-paginating `Stream` oriented version of…","stream","attributevalue","attributes","result","attributeerror","dynomite::error","with_retries","dynomite::retry","retryingdynamodb","try_from","borrow_mut","try_into","to_owned","clone_into","type_id","formatter","rusotofuture","listbackupsinput","listtablesinput","queryinput","scaninput","backtrace","AttributeError","RetryingDynamoDb","DynamoDbExt","Attribute","FromAttributes"];
searchIndex[R[1]]={"doc":"Dynomite is set of high-level interfaces built on top of…","i":[[0,"error",R[1],"Dynomite error types",N,N],[4,R[26],R[9],"Errors that may result of attribute value conversions",N,N],[13,"InvalidFormat",E,"Will be returned if an AttributeValue is present, and is…",0,N],[13,"InvalidType",E,"Will be returned if provided AttributeValue is not of the…",0,N],[13,"MissingField",E,"Will be returned if provided attributes does not included…",0,N],[12,"name","dynomite::error::AttributeError","Name of the field that is missing",0,N],[0,"retry",R[1],"Retry functionality",N,N],[3,R[27],R[11],"A type which implements `DynamoDb` and retries all…",N,N],[4,"Policy",E,"Preconfigured retry policies for failable operations",N,N],[13,"Limit",E,"Limited number of times to retry",1,N],[13,"Pause",E,"Limited number of times to retry with fixed pause between…",1,N],[13,"Exponential",E,"Limited number of times to retry with an expoential pause…",1,N],[8,"Retries",E,"An interface for adapting a `DynamoDb` impl to a…",N,N],[10,R[10],E,"Consumes a `DynamoDb` impl and produces a `DynamoDb` which…",2,[[["self"],[R[2]]],[R[12]]]],[11,"new",E,"Return a new instance with a configured retry policy",3,[[["d"],[R[2]]],["self"]]],[6,"Attributes",R[1],"Type alias for map of named attribute values",N,N],[8,R[28],E,"Extension methods for DynamoDb client types",N,N],[10,"list_backups_pages",E,R[3],4,[[["self"],[R[21]]],["box",[R[4]]]]],[10,"list_tables_pages",E,R[3],4,[[["self"],[R[22]]],["box",[R[4]]]]],[10,"query_pages",E,"An auto-paginating `Stream` oriented version of `query`",4,[[["self"],[R[23]]],["box",[R[4]]]]],[10,"scan_pages",E,"An auto-paginating `Stream` oriented version of `scan`",4,[[["self"],[R[24]]],["box",[R[4]]]]],[8,"Item",E,"A type which can be converted to and from a set of String…",N,N],[10,"key",E,"Returns the set of attributes which make up this item's…",5,[[["self"]],[R[6]]]],[8,R[29],E,"A type capable of being converted into an or from and AWS…",N,N],[10,"into_attr",E,"Returns a conversion into an `AttributeValue`",6,[[["self"]],[R[5]]]],[10,"from_attr",E,"Returns a fallible conversion from an `AttributeValue`",6,[[[R[5]]],[R[7],[R[8]]]]],[8,R[30],E,"A type capable of being produced from a set of string keys…",N,N],[10,"from_attrs",E,"Returns an instance of of a type resolved at runtime from…",7,[[[R[6]]],[R[7],[R[8]]]]],[14,"attr_map",E,"Creates a `HashMap<String, AttributeValue>` from a list of…",N,N],[11,"to_string",R[9],E,0,[[["self"]],["string"]]],[11,"from",E,E,0,[[[T]],[T]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[13],E,E,0,[[[U]],[R[7]]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[18],E,E,0,[[["self"]],["typeid"]]],[11,R[14],E,E,0,[[["self"]],[T]]],[11,R[15],E,E,0,[[["self"]],[R[7]]]],[11,"as_fail",E,E,0,[[["self"]],["fail"]]],[11,R[10],R[11],E,3,[[["self"],[R[2]]],[R[12]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,"into",E,E,3,[[["self"]],[U]]],[11,R[16],E,E,3,[[["self"]],[T]]],[11,R[17],E,E,3,N],[11,R[13],E,E,3,[[[U]],[R[7]]]],[11,"borrow",E,E,3,[[["self"]],[T]]],[11,R[18],E,E,3,[[["self"]],["typeid"]]],[11,R[14],E,E,3,[[["self"]],[T]]],[11,R[15],E,E,3,[[["self"]],[R[7]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,R[16],E,E,1,[[["self"]],[T]]],[11,R[17],E,E,1,N],[11,R[13],E,E,1,[[[U]],[R[7]]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[18],E,E,1,[[["self"]],["typeid"]]],[11,R[14],E,E,1,[[["self"]],[T]]],[11,R[15],E,E,1,[[["self"]],[R[7]]]],[11,"eq",R[9],E,0,[[["self"],[R[8]]],["bool"]]],[11,"ne",E,E,0,[[["self"],[R[8]]],["bool"]]],[11,"eq",R[11],E,1,[[["self"],[R[2]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[2]]],["bool"]]],[11,"default",E,E,1,[[],["self"]]],[11,"clone",E,E,1,[[["self"]],[R[2]]]],[11,"clone",E,E,3,[[["self"]],[R[12]]]],[11,"into",E,E,1,[[["self"]],["strategy"]]],[11,"fmt",R[9],E,0,[[["self"],[R[19]]],[R[7]]]],[11,"fmt",E,E,0,[[["self"],[R[19]]],[R[7]]]],[11,"fmt",R[11],E,1,[[["self"],[R[19]]],[R[7]]]],[11,"batch_get_item",E,E,3,[[["self"],["batchgetiteminput"]],[R[20],["batchgetitemoutput","batchgetitemerror"]]]],[11,"batch_write_item",E,E,3,[[["self"],["batchwriteiteminput"]],[R[20],["batchwriteitemoutput","batchwriteitemerror"]]]],[11,"create_backup",E,E,3,[[["self"],["createbackupinput"]],[R[20],["createbackupoutput","createbackuperror"]]]],[11,"create_global_table",E,E,3,[[["self"],["createglobaltableinput"]],[R[20],["createglobaltableoutput","createglobaltableerror"]]]],[11,"create_table",E,E,3,[[["self"],["createtableinput"]],[R[20],["createtableoutput","createtableerror"]]]],[11,"delete_backup",E,E,3,[[["self"],["deletebackupinput"]],[R[20],["deletebackupoutput","deletebackuperror"]]]],[11,"delete_item",E,E,3,[[["self"],["deleteiteminput"]],[R[20],["deleteitemoutput","deleteitemerror"]]]],[11,"delete_table",E,E,3,[[["self"],["deletetableinput"]],[R[20],["deletetableoutput","deletetableerror"]]]],[11,"describe_backup",E,E,3,[[["self"],["describebackupinput"]],[R[20],["describebackupoutput","describebackuperror"]]]],[11,"describe_continuous_backups",E,E,3,[[["self"],["describecontinuousbackupsinput"]],[R[20],["describecontinuousbackupsoutput","describecontinuousbackupserror"]]]],[11,"describe_global_table",E,E,3,[[["self"],["describeglobaltableinput"]],[R[20],["describeglobaltableoutput","describeglobaltableerror"]]]],[11,"describe_global_table_settings",E,E,3,[[["self"],["describeglobaltablesettingsinput"]],[R[20],["describeglobaltablesettingsoutput","describeglobaltablesettingserror"]]]],[11,"describe_limits",E,E,3,[[["self"]],[R[20],["describelimitsoutput","describelimitserror"]]]],[11,"describe_table",E,E,3,[[["self"],["describetableinput"]],[R[20],["describetableoutput","describetableerror"]]]],[11,"describe_time_to_live",E,E,3,[[["self"],["describetimetoliveinput"]],[R[20],["describetimetoliveoutput","describetimetoliveerror"]]]],[11,"get_item",E,E,3,[[["self"],["getiteminput"]],[R[20],["getitemoutput","getitemerror"]]]],[11,"list_backups",E,E,3,[[["self"],[R[21]]],[R[20],["listbackupsoutput","listbackupserror"]]]],[11,"list_global_tables",E,E,3,[[["self"],["listglobaltablesinput"]],[R[20],["listglobaltablesoutput","listglobaltableserror"]]]],[11,"list_tables",E,E,3,[[["self"],[R[22]]],[R[20],["listtablesoutput","listtableserror"]]]],[11,"list_tags_of_resource",E,E,3,[[["self"],["listtagsofresourceinput"]],[R[20],["listtagsofresourceoutput","listtagsofresourceerror"]]]],[11,"put_item",E,E,3,[[["self"],["putiteminput"]],[R[20],["putitemoutput","putitemerror"]]]],[11,"query",E,E,3,[[["self"],[R[23]]],[R[20],["queryoutput","queryerror"]]]],[11,"restore_table_from_backup",E,E,3,[[["self"],["restoretablefrombackupinput"]],[R[20],["restoretablefrombackupoutput","restoretablefrombackuperror"]]]],[11,"restore_table_to_point_in_time",E,E,3,[[["self"],["restoretabletopointintimeinput"]],[R[20],["restoretabletopointintimeoutput","restoretabletopointintimeerror"]]]],[11,"scan",E,E,3,[[["self"],[R[24]]],[R[20],["scanoutput","scanerror"]]]],[11,"tag_resource",E,E,3,[[["self"],["tagresourceinput"]],[R[20],["tagresourceerror"]]]],[11,"untag_resource",E,E,3,[[["self"],["untagresourceinput"]],[R[20],["untagresourceerror"]]]],[11,"update_continuous_backups",E,E,3,[[["self"],["updatecontinuousbackupsinput"]],[R[20],["updatecontinuousbackupsoutput","updatecontinuousbackupserror"]]]],[11,"update_global_table",E,E,3,[[["self"],["updateglobaltableinput"]],[R[20],["updateglobaltableoutput","updateglobaltableerror"]]]],[11,"update_global_table_settings",E,E,3,[[["self"],["updateglobaltablesettingsinput"]],[R[20],["updateglobaltablesettingsoutput","updateglobaltablesettingserror"]]]],[11,"update_item",E,E,3,[[["self"],["updateiteminput"]],[R[20],["updateitemoutput","updateitemerror"]]]],[11,"update_table",E,E,3,[[["self"],["updatetableinput"]],[R[20],["updatetableoutput","updatetableerror"]]]],[11,"update_time_to_live",E,E,3,[[["self"],["updatetimetoliveinput"]],[R[20],["updatetimetoliveoutput","updatetimetoliveerror"]]]],[11,"describe_endpoints",E,E,3,[[["self"]],[R[20],["describeendpointsresponse","describeendpointserror"]]]],[11,"transact_get_items",E,E,3,[[["self"],["transactgetitemsinput"]],[R[20],["transactgetitemsoutput","transactgetitemserror"]]]],[11,"transact_write_items",E,E,3,[[["self"],["transactwriteitemsinput"]],[R[20],["transactwriteitemsoutput","transactwriteitemserror"]]]],[11,"name",R[9],E,0,[[["self"]],["option",["str"]]]],[11,"cause",E,E,0,[[["self"]],["option",["fail"]]]],[11,R[25],E,E,0,[[["self"]],["option",[R[25]]]]]],"p":[[4,R[26]],[4,"Policy"],[8,"Retries"],[3,R[27]],[8,R[28]],[8,"Item"],[8,R[29]],[8,R[30]]]};
searchIndex[R[0]]={"doc":"Dynomite-derive provides procedural macros for deriving…","i":[[24,"Item",R[0],"Derives `dynomite::Item` type for struts with named fields",N,N],[24,R[29],E,"Derives `dynomite::Attribute` for enum types",N,N]],"p":[]};
initSearch(searchIndex);addSearchOptions(searchIndex);